%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.5 (Build 17F77) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 20 20
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 20 20
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
q
0 0 20 20 rc
20 0 0 20 0 0 cm
BI
/Width 60
/Height 60
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
^],qbrr:L$os20qU8mF=RGrgTgiI_mASBP)B@D'HeV](6S!Dj3VW5=skhF\[rr'S2aT"R%q>SI\nWKI'
?Z"@m@*r"^cWFN!>?oBY>g-S[b@4YuA6I)f=itG[b%k#"CfSSq<60)Ya*h:<W05rca6rg!rQ,#as%V>-
p5+si=_,oZ?-ZJVbue2o>?]3V=ik#RaCA;lAQHfa<Q8cQa)"\pDGnGm;8mQPa)t1sG>?)%9u;6N_L5(p
IS%J29uX&^f&tcZcMuDo=m>5IOd"U'>Kp8QbZ\,l?!,3T=3+iOa(8;lBiW,e<5i]P`GSSlE_s\r:W.BN
_g"nlH:u)$9>Q'L^jo"jJ4IA+7DFOE^4ntiLI&\35e`1B^pSaDn`BMps4[KaoCDdQTAa-\b?J#g>uepQ
<6&HH`F`&fBMl]`;8R0I_JrDhF&0Vq9u2!I^j/VhHqD)%8\T[E]R`PcK13J.7(\4A]88kdN'Y(85J)q=
]T51gOug1=3P(G7\sY[l`/`LEnG:l=h>_9<cL5LQb$e,d@Sk$R:W-d=`+Dc]BhZ9[9YYXB^NN8aGY>_r
9"fXE]RWPcJ4I;*7_OLD\q`Y_LdAM-5IZS9[uNYZOZg(64g^G8Z^*VZQT2IA2Rf&3[@9(_Rl7^E27K)5
\"c='j2UE@s5<os\ZY")9uCL7_dlBVAkKjP8\o.4^hcNUE(7K_8A'7=\pd,ZJOR,%7C\%=[td;ZM*\Y1
5e)h=[ZE\\OZTk23jOr1Ya7AQRQ.C;2m&Q-Y*q5PS2R^E27/o2[%9.]Si*dE27&o5Z_'+_U,TR3Uu1,1
k5Tl,qYm1HfP3jjC.,gP7)*P+^26<PDF;'T6G%;*\T^BLHU>,k6FMS6[>7,VNBX\.4gL,3Z'7AUQ8u19
3Ne].Y*_,KQo;"626*6*WM)5KTf/pE26<K.XeIYUU,9'I1TmK/XeR\UUGK$I1U!Q1ZD9CaUG]BtJ^FAl
rT=.Es*sY0qMo@9D*YgQ5J1o!]Pp-LE^79Y5e;&&\9:0HGX/W`5dPu+Z\:WKM*J2'4g:&0YEV#JQoM+9
2l`H.Wh22LSi*R>263<*Wh2,ITJ`UB2Pm6.Vkc2LV)59L1TI9-WM_MQV_bEP1TRE0XJ[hUV_YEQ1TdT4
YGX7`]OM&^q!\%Cs6Tc8r;-DUBZb?W\T0dAF$-mP4h#Ms[rt!EGsA]a5dPl(Z@G0EK0QSp5-B`*XGf9A
O?0A+3N/?)V4BQ@Tf/[@2Pd-+V5,rGUc#'F1oI**VkZ)FVDP'G1Sgp(VPuDOWACEN1T%60W3%kSXYZoV
1T7?0Wi\"WXYHoY19RZ6$*UBdYJ+J^rVHKZs6Tc8W.`W@3k08m[<=X>G!36W4gTK!Z[P*DJ3L5i5-KT'
XbT*ALd/#!4fXK'W/s';Prbe232<!'U7aE;UG\[A24g[%Su+?=V_t<J1o.$+Uo-&FW&(6L18_'+V5l>J
X>6ZT0r;$.V6MbPYVE#X0rD-0Vm%qSYVN2]0s%K4$*C?dXKOF_c%"%*s6ou;_5H.73OEukZZnO:HTJE[
4L0E!Y^nsAKKZMl4KF3!W/Eg:O?BG&4f=K*V3F$9Q8tY-3MN-)StJ$7Uc"^A1n:O&S#J66WAL-F1n^j*
TW0f?W\^9J18:p+UolGIXtZWS0Vbg)Ts6;GZSA5]0VYg*UTuSLZSA>a0rVE4&#ccgWNe4XZ8/Jd1993*
g[G15s*r_Bl?kb$HonQ\3j!ilY(&L7JNL#e4KX<"XG8p<ME@_t4/J-&UR4*:Qoh%33MN'(T:S$6T/N:9
2OpU$R\r!2W\g-F1n(F$R]JB8XYcKL1n(R(R]SB7Y;;ZP0q>I&S?X`<YqMZR/tB7#S?X`=ZS.oY0VPp/
TXHPJ[kJPn[P=Yf0rVN7W3n@Z[5+_i26?)^kOSZGs*s_2q1_JKIlsob403unW.[./K/olb3iRlqW/3R4
N]Nu"3hhs%Tpe$7SiNF931Zg(SYS36V)Fd>2O^U'Q`E!1XYlHJ23tL(Q`i64YV_]Q1mbR*Qa8N9ZSe,W
1mbU*QaAN7[5"&V/ss%"QaST7[P4,Y/t'=)S@UAF\hG(q\M0\d0qu03UU`(S\1jhj0W;H8WOtL#qX=7Q
s7QC[[uo*h4KX/qWe<C2L,bub32M?iV2%(-ME.Mn3MMcuTpe!7SN*162k6[&R^,bec]?*,^Y\D0lLsQ9
qXaL[q>C6irVlfhs8Dpar;HTir;-$[q!7SAf'2D3h:IS&_+C<10pB1&QFec9]e5\d/t9L,S@gMG]J,tj
0;#j/TXlhP\hL"l0W)B8W7[!Rp&Fge1@O>tL-`"r40"#qVMR7,MDq2f31u6jU5V+-O>rnu31cWuT:n35
Uc+O;3189`b5M27`W%^lqY]08a1jEp^b:ng/XF4(Qbb5>_Ch:n/tB^0S\?_J]J#nh0VQ-5UqACX^,E%d
jRi6Iq#;nLJB3I,We`[5M`@Ml2kZ3kT9D7+P;f(t3MDg"SXh^.UG\F91mGFJV=<7+o)C0;qu$<]q"X1I
pZV2BkOSB0nb;5;pZM,AkOSE3o(_MAq<dkPoD&:]rUTt>o\/WT:SPcYP/Jo8`%@1l/X=4*QGG/@^Fl%i
/tK^0TY<+R^G)Fs18WNH`VBK1s"*?cmYEs(ME.Mn3MVWpToqC,P;o(u31H9pS=)=*Si<+42O1*rPH$R*
nD!=,s$?Y_ro1'.a_%Th7@LhDOM!?/]ePJ[0oWn'MSV'*_D7%e15j+,MT%?.`%m7h0oNq'Mo%3,a@;HC
AuOmpd/O"Cqu85>g$?[6OiB#9`\*Fn/X4.'Q,+u:_(;"j/t9X/SA6eK^bDIt0VcH?V=W:*qu?Qn.BRj3
M`RYo3MDTqT9M=+QT1J%3166qR[c=*T/W1524(3tPcHX(esXSUs$ubDnAnt8]JGV]1Q9"&N4q$)^bUe`
15Wn(LVkj&`\NCj15X"*LrV6+a"`Fk0o<t*M8q<,`\E:h0Sm_&LrM0+dU8jEjm`0I.H?]3at8Uq/s++*
Oi8o9`@[@o/==C.RD^_H__.Fq0:p$8U;/IWe8iA%s8N$LqY0oK5c'Q&Tp%L0Q8kG'2k-BsR@Z=)Si2t/
2O:*qQDcX*XYZ3R9qVC\r;Q^jrr)i=@&CUmN5%-+^G:Y]0o3\$L;P^"`%Ztd0SdY$KuYj"atSLk0SRY'
Kuu*'b:n[o0SRY&L<2*%bWLj>H*GOYO2s&1e6esLrVlfr/H,GCdmohM/;q\'NQEf9a"ERs/XFC.QGkJD
`\*_!/tBj6T#*4T`&OUlp\b$jrr4G%_;^M9TTqL/QoLV+31?HtR%ZC'U,A7223jsqP,L7%X>H*F1Qg7K
_#+-qjK6hE1Q&t(Lqtj%_D-e`0o!V#K>]Epa"W1h0SRY&K?Q!"c7aan/q_D%K?Ps"c7Xap/qV>#K?c?.
qsa=YrsSf#qp@ZhbV"P5X3UVB.HH>ucn("!/W%Y'NQ<`5aY&gu/sO=,Q,YDCa"Ee#0:^!8T>iRYmCqTZ
s8N$I\q7nd3M)X!S!u@*TJi451mOjoP,1""V_jU:1m4ssOg6d([PNm+^"N;_44%T9_D6k`0nmJ!K>T?q
`\<(c0S.4rJB9Eobq4Lk07_A&JCI#Ldm]>C/qM>$J^5s$cnC!u/qMeiU\Oipi-;EN/V;YaU&4j=n@[E$
/V_Y)LX%K.bUnaq/s44,P/f/<a"E_!/t'd6S&[1Qa"O%=IDl-b/H5VISk#ZG31QKuR\)O*U,8+11R"do
OJt$uX##j@16AgsO1-m']/#66f&ur1,KE67__?b^0SIG!K#TEna=_tb/UtqqJ'BQni-;?n_qFnRoDAP%
qX*nE_qO'pXO8bOdOp!s14o>bnG`Fqqsa=03f26:J^cuGqu85?e`P72K@)9(d4L'u/VqY'MomT4at8h"
/saR2QcLeHaY'+)/tC-NVuQ_p/EP1?R5^V+2OU9tQ_ZL'VDFC716ALkNNFsrY;2*C0TEIqN4Ca$^+kE<
lLY#T*WGs7`A*"c0S.=uJ'9Qpb:e=g/q(qqI*b-6nA!Q=ruLXEf@W?Ddk#ps14n@pU=2#Rdk61!/V28$
Jc>QFrr4PGlLN@TK[VN+dk-:$/r%\(M9RW2bUnt#/X4C0Q-1eIaY&t$/t0g6SFXnf/CLHFSMut12jU<u
Pc-I&X##d=15r@kMQeglZS@6D0Sd1nL:oBs_D-`@o(W.`)Z0.$a=i"a0R_/!I*OBkbV4@e06tr1L&10,
q#:a#pA+@+ht54OrV$'^ru1e$o@Q6^eLZ.!.t,u#Iag$!dk?0u07Nijq#::Er:9U207hS*K%)B*e1H@$
/;MM&MU!f4bq>.&/X4L4QHLnIaY0((0:_4#dk&V'a.bJXV)FR<23Y*uOKUI!YVM!>0nZkhK"!Oe\helN
14d7sJ&F-nrVHEjrtkP!o?/e5bqXLh13_&"FO)^`cnTY3^XW/\(]<jtj*RcS/pGbrG1/!ceLl"*H)UZ2
pA=k+o"N]-/UH#"He9oteh2="/pl)$IJ`F'rr4PJq>8YqIa]s"eLc@'/;)D&L<qH,cRk%#/rn4/P0PYE
cRtR.0:0g8RGs4J/AckIV)FL923G!tOK^R$Z879A14lqiI_.Ib^,C>S2L34uHGqaea#/)?r;HWp'`.+a
cSKXh2072'E7-U]e2;.)H_^K<*W5L%h+3:P/To\tFk86hf.D-t/TfSqFPTHAr:0LXrtOR<W7WVFfdqF$
/:,l"Hds`sqWRJKs"+0IrRENKeLc7$/:Q/%J^l<(dOU(!/;VY)N6a);cRtI./sX[6QHLnJhKcjb]4nII
1lndrNj1F"Zo*WI21r@qI_7L^_DlbX3crA'E6:4^auOLd3H+fp'`.(^e2M3n3,@&*C=bLZffEj>`ROeb
*U%pIg+IBt/ooYtFP8<gg+@I%/Tof"FPA?fkBWs%rtP+Bf@h`tg+7F#/9obuHIXTlqWI>Hs8N!Hf.;=$
/Uc2%IF]s"eLcC%/VMM'L<qQ0cn14'/We:1PKkbEbqGF;A?mYm<1g9NN3YBu[Q&rP3Ine'Hb_Xb_`DbV
4`AG,D9P4[cTZ-l4_rM0C&@oEqWR=t4Cm&,ACs+Vg-9$$5@XQYnc&P5rV--D2JCl$C#(O\hCrm'/o]St
ESN*dh(<^&/90AqErG\+rr3]0m./m\F5/9fg+7I#/UH#"H2?^mqu8+t/:,u$He0fsegu:$/q;D'K%)B+
dOg7'/rS./NR05<cn1L./sk0bW%#&>NjCa"\NGGW4FY(0HG_pg`]e@`5]"Y1C!B"WcpM?m6=\S5ACj.W
qu79*l0R.j?J@ePgdGH(6X8VQDu9PZpX.^P3Fgr,A`,LZi&,6,1MYc$CYga_hC`d'/TBJqDt_H3qu78c
6@df>En`*dfdq@#/9q$Sn,*,6fdqC$.sff!Hds]peh)=$/V)A'K@DH+dOpC*/WA(/O3oPCcRkF12k)8-
7Z"]>J%e0o_a&Fb6?C49DTbF_c9u9l7:O_:@+@kUfLT9$7pFb<>5S=3qs*P,86Oh@=PubPiCR)2>\a09
,P]a?i]^T+4^I)1@,j:Xj#CW02J(i(B](U\h_/g&/8P"*h#%*`ha;qJ.WO2nEn`-fgFICBkO8<J.GH@r
gFIO&/:,r#He'fseLc7#/V2G(K[VQ.e1Q[./WJ11OjPbEdlEmH`a4_A6?pC9FN6dga@:$h8SQICB$j.Y
e4O*!:0cIL>22nUhG$r-92k`f'`74_j@iJ39N'qG;r^PJj%NAKn*p>V,Q7B3j[<236<NA9>NJ(TjZQu5
3ah#.A)]@WiA,$(0kUCWq#::-r9X"1/8j8oDVZg]h(*L".WP=In,*,6g+.:".s9VuGhFWnfIV@"/:?##
J(?3'eLcL)08S(1N6j/:d4UR6:8B>dFI:$:EQC[eb"?Bk9P;XGAC44^e5'E%;HqgS=PHnWhc3S7;,H@M
:](/+r9N\3:/9tL:Zt\Qk"ne7:JUZ.bkqD\nViUp7T8M><p2qPk<`>85?d24?0++Sj>LE5J"-?8'_]Jp
i@Ss*.W45qDVlp^ga[7>kO8EMrr+A#.rsApESN*dg+7F"/U>o!I+9freh2L'08%e/L=7i5dP$U./s"ju
XXr4aTup#Dc;&'!:M%jMA'n4^e5T]*='F9\=57"Zhcs(=>#"-Z9^#DJrr)fprtPCum-7M@lVpLA<D2UV
9'K8Gn<&S)ruM(1o^6-ul:Fh;85\V@;X-YLks8D55$@&JDuK8!qu7AsI%0.MC#L[Zi%&[&.W+#mD>WSe
rr4PKr;GA#En`-cgFRF#/9KStH.acsfI_L%/q2>(JCZB+eM)a-08e42NT58l/EEJ*c;8'!;.@pO?di"\
e5ol,>$0Na<SLhYh-X%=?VKTf8a9JLm8ujWqtg<l(]EjkmTE!I>"A!a8*sGJmTE!H=[i21`V]ZOrUf^Q
O,WI#:$YADlUFS57oA`2Oo=nDqu7K,_p.:&?K<qQj"P*&/SX,nCu?d[r9X"Rs"+0FqqET>gadI$/Tfc#
FkeQmg+7R(/Uc5&Ib-3%f.Va,08@t1LXRo7k`3M2lEe"L<*n*S>LuqZfihM4>uofg;W(nWiF,C=@nPll
8F'SOmTr?M>seP`oD\b.rq?!R@79Tn7.4MMn6\KQ>se-f61\kjrUB7MrsSi$p\NFiqpa-pp\4I_)ZB*n
lV_?X4^-u-?KF"Oj"=m$.r!rmD>j)#rr4PJo(LigE8<!ah(3[(/p5r%FkSEmg+@a+/Ul>)J(H?*eh;a,
0Se(1M!Un\/G7TGf2u51=]aB_<8LtZiF,OA@nYoo8EOGQk@6sH@7BWm7.=VPn7"`_n*L&R*WH!6nRb)W
Aj>ft4n3&GnR=TN@QX-i4nEPfqTQkAruLpUaR<5<lU=b;6!!23=m%_KjY:0'/nX)pCB",.rr4PHlL<X\
ES`3dh(*U'/Tfc#FkeTpg+Ig-/UuG+J(H?(f.Va,087n0L\8mN/H>_Kh.gKW?;fZg:Z5bVj(1jEAk2&t
7-\DPlsrENA4#fu6Ln_Snn(,ai7Rr,,P$%SnRsuSB/oKo3:gZ?o40lQ@la0j2tLE:pQgF.ccH(Smed#/
rU91Nbf]U<M"")/n4H@A85JP?;X-MJkW2l/2I5E#A*$+$qu85BeD]77E8E-dhCNd)/Tol$G2+Zng+Ia*
/:H/&Ib6<(f._d,08/"DOT5:Yrr4G4S<Df>:#]\UjCUsGB1D)u6gAGPltScSB0Gfu54WAMnn:/WBfZ%9
^\e%*p6'4`CcM'%2YLiBok68UBK#Nq2YLZ>oO9]N?o[db4S)f@o4q=tBiX_'5k.`<nPVaD:dskJ7dirB
m7:%=6W326<p2VKju?`6B8cZe.J:9ui$rX&.rjDsF58Ejh(<g)/9fi#GhO`tg+@d+07VS-JCZ?*jaOT9
s8N$Ip<L_=AkD)t8*O_Ul=iTNCHh*&476uInS1&UC,ba!2=kQ>oP?8WYDrGZ:&Du7p2Mq_D`%0*1\PZ@
oP62SC,,Ep1A#*6ojTfO@5mjd3V6Q<o3"6I=?c:V5Oh`=nP_dE:IFVG8+0)Em7:%=6W326=6MbNoWZ+-
s!dAlXPkXHi$r[%/9BW!FknZngamU&/:-&'HeL*#fe7g,0S%h/K(?V.rr;ut/H5M@k&3oUCd[N*5OE;N
m;4oPE&d?+2tLuGol)b[D(kNu/bO*8p4Z*;qtg<lrr,F_P[F0,0_f]DpMhk[DD(Wu0(s$4ok6)RAhj$i
1A5-6ojB]M?9.X_47lZ<o2n-G<^-(P61I`=n4lLB92+_D:[:AHmV71Lrr2pKrqcNR8U95FCu$U\h(3['
/9T`"FkeQlgFRR(/UQ5)IG$6%fIqa.2MV5*qu6Wms!dE,Id1l9lZ#&TEB<Q.3:LuGnoHSZF><H10_TN<
p2V\WFtE?4/c*)Equ91cmcF51?2&RqpiS1aF"R0,/GF$6pM;GUC+T'l0(rm4pLH&P@Pmac2YC?8p09WM
>!):U5OhZ<n52UC:.anI:@N7Ir93GCs!dN+Y2h<Ii@em$/TBJrEni3ggam[(/9]`!G1nKng+Id,/UlA*
J)t[Kqu?Qn/GnJ\luP;VF?/c32t;)Knouq^GVJi:0D9ZDolr%^GV&W;/baZEpjb$rkh5k5rr,"WbcLZ2
AG_*JqKFLdF"@'+.f"!4ph_PSCG5Bp0_K$5p1,rO?o7Ra2Y:98o3+<K=@)Li<qLibq74$7rql^HqqU/o
4CI;0@H0+Sh_/j'06,f#FP89ggF[R'/U,r#GhO`rfe.^*/q<WHk552Rs"*f>IdhP?nTct^H8G2B0_KoJ
pO=afIk:;C0)0rKpjt*mK.HbN/,>K*rTMr*s!dsGr;QKarq,XXn`p,Cl2L/8rpT(Mn*'c>kl'u8rpT1P
o'cSPp&=pfo)C9<hVdd.E9TMgjuH].2.GN"BAYC[hC`g(/Tff"FknWnh(<j+/U?)'HfoUQq#C-h1B$Y&
o7/mnI5CMG1%p2Rp4G$mKIuqO/GOoNq1gWuM(e[\0)CDVqhZp&MDG.IQ2^^X`W%^mqYKr_U[LoRlpXh;
6!*84>NIkQi\b9*12>YuE8<*dhCWj+/Tol#FknWpgbXKXjR2gCp&@GU\;U!31\HGXpP(EtM(na^0_gMY
q2@$'N\UBl1]*7hqiNW1OYcos1]*1eqj^:V^Q&3G^&I6Grq#FSp[\=]qYpKmrr2TjrVf1_rVl]jrq>s_
n*Bo/f_Wb-pS!iBB3Oe"7IEiAlq1+?7TSe?=m%nPjZ-`.2.kc$Cu-a]h(3R&/9Tc#G2+Zpm"r.Cs7H>@
p@.d;62$0lpl%!'N\^Hl1]*7hqN<Z3Pr8H*2uAt%r0]M@QoOu13W,4&r0B8<PVrB&2#NLnr/`f5O#?fo
1\utaqM$a$JM6hI0D]uJqK4LeE\R<.0DKB=p1ZDWAN06i47c`@nl\0I<C$%N7.3lCm7U.?85SV?<p2bN
)Wj+fj>^]01MPc#DVcpbhCNg+/p?,6Jc5'1p&FU_J,S9Dq2[E/OYllt2>WRsqj9>=RQ1/748YX4r1H4O
Tg&FK55V'<r1Q=PT0<+D4T([1r0f\FR6(843W#""qN3`5N\pWi2#;n]qLLF!I51PD1&5rJpi8:dDE7E)
3V?rCojKoR>s.^]5k7oDnPMjF9hFbF:$b>JksAJ74r%;a3aq#+B&>=YhCWd)/9Tf&GkJu-o)J1YJ,R`j
qNs5=RlUA:48b^5qk-(KUcnXQ62d`KrM`0_WC6Zb7Js2Tr2E*_VF(6X6N!TErLlLTSj31B5Q$p5qis8?
O?38s48OamqM$s*JN*CP3;@_[p2`=gDE.?'2tgcAojBiQ>s@j_6h+,En5)XD9M=bD;!LGKkW`;63tGZX
2J(f%CYg[_h(Eg=Tu-9um/MS6`.e)_55h9ArM;dWVEt0\7K';Xr3&ZiYY+ku9Dl%fr38llYY+kr8c5Y[
rMrHeW($]_7K&uLr1HITRmd.>6Mcg0q2[f;N'[8p559ampO,1!GWkeB48*MPp1ZS\A39Ek4nDoDnlA*I
;FU%K9(#;IlUFk=6!EG7?K=$OA`5CZh_/s6I&H?2li2J5qY\$DrMr?bX@<&i8,]YarN],q[8-\/:]7^u
r3fE![nln0:]7[srNf5sYY4qu9Dttar2E9bUe(EV8G\lJqjBqMQ:Cb67er'4q2%B3K0B!X559=cpN&Lk
DEd],4S3,Ho3OWO=[DRW7IO#Dmn6CB7oS\?=Q_nSj>^]Vi\P92?',*_r9XIIs*sk7rkijVZq^M-:Aq\!
rOGf)\l8R>;uO@-rOZ#+]2\^?<;a@,rjYo+[Sm+4;>mgtr3&roX&&Vk:&:\\qk6[[S4WXG8GSNAqN+,A
MEpuj5kodmpNSmqF$B8754iJOo3X`Q>!VOV6gmf@mn6=@7oAP<<p2_Pj>pf8@u19cme#cDjo9`-qu>0/
rOZ#,]iG$G<rTj:rkM\7^fgTM=T-$<rP2P6^f^NL<rK^3rOc50]35'A=8T@)rNK5tX\nqo;>d:dr1Qg\
SP/jI8,AB:qi!o=LI1cd62,[hp2`IjCd7N%5P/2FnPqmC;+BtJ9C#,El:"b;5[3]2SH&H_k5X?=E9+J-
`*WG]?N7rOrkr4C`F&S_?i@oMrkr4D`*iS]?iIlKrkVq?^KpcN?2V9<rO,l,Zrd11<rB'uqPd9eV,$o\
9Db2MqijVIO$rf"6hu9upNo0uF$K;461SMPnQSBK<CZ=P9C,;Im7LLRX0pmch#D-Xe,RX1rlSjPb%L^r
BDp"erQAmRb%UdrBE-(drlA^Na(51g@f=/QrP2h=^0gfM?2_9;rj5f*Yu^_';u<Lhr1d'bSPAsI8beB:
q2%Q7Jjf<Y7.kUgoP-hc@R]ci8+';KmTNfjbKo#Eg&GU\o`+!Rs3Ylec>W^/E;e.&rm5W_cYrg.DZ7mu
rQK*Wb%q!tCAu7erPW:H_.3GX@K*iErO6#/ZWR+-<VraoqkR'dSkf0L9_jcCpkh]<J4]HZ7eC[jnn:P`
@SQQgRJudJgAfY%=ShFaj/)e+G5g!5rmZ)he91c>F8jU.rR#WacuB!0DuRpsrlJsT`G#4fBDoSUr4HJ:
\6]$=>5YR,r2E]oUJguZ:\pAQplA/DLJ7Dk9([=#pn3KBlfZdtc2UK4jo+;<rn;l#fR*SKI/_]CrR?)k
ds(f=G5fg/rloE]b&..!C]2.arP<(C]jgrM@/[H<r3'9$W)ieh<;W1aqNOhPO];.XL&L,gcMtrb5lUW[
o[s3-Z2WU;rn)`#ep[PII/_T?rm>uhc?0'0E;djpr5EFK_.`e[AGirGqm0W,X]k\+Ac9Q3rnkitqtS84
^&K\`s7bLPn&PIn\c:`ks50CIfT,sZIf@Z>s3ZQ!e<0a^T)RKFrnk9dm+D@<rkJJ`
~> %APLeod
EI
ep
end
%%Trailer
%%EOF
